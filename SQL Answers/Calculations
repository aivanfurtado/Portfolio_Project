-- V.	Calculations
-- V. Ex1:
SELECT
	EventName ,
	len(EventName) as Length
FROM
	tblEvent te
ORDER BY
	Length ASC;
  
-- V. Ex2:
SELECT
	CONCAT(EventName, ' - ', CategoryID)as New_Event_Name
FROM
	tblEvent te ;
  
-- V. Ex3: 8 Rows
SELECT
	ContinentID ,
	ContinentName ,
	isnull(Summary,
	'No Summary')
FROM
	tblContinent tc ;

SELECT
	ContinentID ,
	ContinentName ,
	COALESCE (Summary,
	'No Summary')
FROM
	tblContinent tc ;

SELECT
	ContinentID ,
	ContinentName ,
	CASE
		WHEN Summary IS NULL THEN 'No Summary'
		ELSE  Summary
	END
FROM
	tblContinent tc ;
  
-- V. Ex4:
SELECT DISTINCT 
	CASE
	WHEN tc.ContinentID IN (1,3)  THEN '1 or 3'
	WHEN tc.ContinentID IN (5,6) THEN '5 or 6'
	WHEN tc.ContinentID IN (2,4) THEN '2 or 4'
	WHEN tc.ContinentID = '7' THEN '7'
	ELSE  'Otherwise'
END AS 'Continent ID',
	CASE
	WHEN tc.ContinentID IN (1,3) THEN 'Eurasia'
	WHEN tc.ContinentID IN (5,6) THEN 'Americas'
	WHEN tc.ContinentID IN (2,4) THEN 'Somewhere hot'
	WHEN tc.ContinentID = '7' THEN 'Somewhere cold'
	ELSE  'Somewhere Else'
END AS 'Belongs to',
	CASE
	WHEN tc.ContinentID IN (1,3) THEN 'Europe or Asia'
	WHEN tc.ContinentID IN (5,6) THEN 'North and South America'
	WHEN tc.ContinentID IN (2,4) THEN 'Africa and Australasia'
	WHEN tc.ContinentID = '7' THEN 'Antarctica'
	ELSE  'International'
END AS 'Actual Continent(for interest)'
FROM
	tblCountry tc
LEFT JOIN tblContinent tc2 ON
	tc2.ContinentID = tc.ContinentID ;
  
-- V. Ex5:
SELECT
	Country,
	KmSquared,
	ROUND(KmSquared / 20761, 0) AS WalesUnits,
	KmSquared % 20761 AS AreaLeftOver,
	CONCAT(ROUND(KmSquared / 20761, 0), ' x Wales plus ', KmSquared % 20761, ' sq.km') AS Wales_Comparision
FROM
	CountriesByArea cba
ORDER BY
	ABS(KmSquared-20761) ASC;
  
-- V. Ex6:
SELECT
	te.EventName
FROM
	tblEvent te
WHERE 
	EventName LIKE '[aeiou]%'
	AND EventName LIKE '%[aeiou]';
  
-- V. Ex7:
SELECT 
	EventName,
	LEFT (EventName, 1),
	RIGHT (EventName, 1)
FROM
	tblEvent te
WHERE 
	LEFT (EventName, 1) = RIGHT (EventName, 1);
  
